[%- SET public_print_release = c.get_printer_configuration.public_print_release %]
[%- SET pdf_conversion_service = c.get_printer_configuration.pdf_conversion_service %]
<div class="container">
    <div class="row">
        <div class="col">
            <fieldset class="">
                <legend class="">[% c.loc("Upload file to print") %]</legend>
                [% IF c.req.params.error == "INVALID_FILETYPE" %]
                    <div class="alert alert-danger" role="alert">
                        [% c.loc('Filetype was invalid; PDFs work best.') %]
                        [% c.loc('If your file is not a PDF, you may use a PDF printer such as <a target="_blank" class="alert-link" href="https://www.cutepdf.com/Products/CutePDF/writer.asp">CutePDF</a>,') %]
                        [% c.loc('or a <a target="_blank" class="alert-link" href="https://www.freepdfconvert.com/">web based PDF converter</a>.') %]
                    </div>
                [% ELSIF c.req.params.success == "PDF_CONV_SUCCESS" %]
                    <div class="alert alert-success" role="alert">
                        [% c.loc('File successfully converted to PDF and ready to print!') %]
                    </div>
                [% ELSIF c.req.params.error == "PDF_CONV_ERROR" %]
                    <div class="alert alert-danger" role="alert">
                        [% c.loc('Something went wrong with the automatic PDF conversion process.') %]
                    </div>
                [% ELSE %]
                    [% IF pdf_conversion_service %]
                    <div class="alert alert-warning" role="alert">
                        [% c.loc('<strong>PDFs work best</strong>; non-PDF printing is currently experimental.  Best of luck!') %]
                        [% c.loc('Currently supporting: ') %]
			[% c.get_printer_configuration.pdf_conversion_service.supported_extensions.join(", ") %].
                    </div>
                    [% ELSE %]
                    <div class="alert alert-info" role="alert">
                        [% c.loc('If your file is not a PDF, you may use a PDF printer such as <a target="_blank" class="alert-link" href="https://www.cutepdf.com/Products/CutePDF/writer.asp">CutePDF</a>,') %]
                        [% c.loc('or a <a target="_blank" class="alert-link" href="https://www.freepdfconvert.com/">web based PDF converter</a>.') %]
                    </div>
                    [% END %]
                [% END %]
                <form action="[% c.uri_for('upload_print_file') %]" method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroupFileAddon01">[% c.loc("Upload") %]</span>
                            </div>
                            <div class="custom-file">
                                <input type="file" accept="application/pdf[% IF pdf_conversion_service %],.[% c.get_printer_configuration.pdf_conversion_service.supported_extensions.join(",.") %][% END %]" class="form-control custom-file-input" name="print_file" id="print_file"
                                    aria-describedby="inputGroupFileAddon01" required/>
                                <label class="custom-file-label" for="inputGroupFile01">[% c.loc("Choose file") %]</label>
                            </div>
                        </div>
                    </div>

                    <p/>

                    <div class="form-group">
                        <label for="printer_id">[% c.loc("Select a printer") %]</label>
                        [% FOREACH p IN c.get_printer_configuration.printers %]
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="printer_id" id="printer-[% p.key %]" value="[% p.key %]" required>
                                <label class="form-check-label" for="printer-[% p.key %]">[% p.value.public_printer_name | html %]</label>
                            </div>
                        [% END %]
                    </div>

                    <button type="submit" class="btn btn-primary"><i class="fa fa-upload"></i> [% c.loc("Upload") %]</button>
                </form>
            </fieldset>
        </div>
    </div>

    <p/>

    <div>
        <h4>Funds available for printing: <span id="user-funds">0</span></h4>
        <span id="print-button-warning-text" class="form-text text-muted">
            [% c.loc('If enough funds are available, printing will start immediately when the "Print" button is clicked.') %]
        </span>
        <table id="print-table" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered">
            <thead>
            <th data-priority="0">&nbsp;</th>
            <th data-priority="5">[% c.loc("Type") %]</th>
            <th data-priority="2">[% c.loc("Status") %]</th>
            <th data-priority="3">[% c.loc("Copies") %]</th>
            <th data-priority="2">[% c.loc("Pages") %]</th>
            <th data-priority="4">[% c.loc("Client") %]</th>
            <th data-priority="3">[% c.loc("Created") %]</th>
            <th data-priority="1">[% c.loc("Filename") %]</th>
            <th data-priority="2">[% c.loc("Printer") %]</th>
            <th data-priority="1">[% c.loc("Cost") %]</th>
            <th data-priority="1">&nbsp;</th>
            </thead>
        </table>
    </div>
</div>


<script type="text/javascript">
$(document).ready(function() {
    // Update filename display in custom file input
    $(".custom-file-input").on("change", function() {
        const fileName = $(this).val().split("\\").pop();
        $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });

    const formatter = new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD'
    });

    let user_funds = 0;

    async function fetchUserFundsAndUpdateUI() {
        try {
            const res = await fetch("/public/api/user/funds");
            const data = await res.json();
            user_funds = data.funds;
            $('#user-funds').html(formatter.format(user_funds));
        } catch (err) {
            console.error("Error fetching user funds:", err);
        }
    }

    fetchUserFundsAndUpdateUI();
    setInterval(fetchUserFundsAndUpdateUI, 60000);

    const pTable = $('#print-table').DataTable({
        [% IF !c.language.match('en') %]
        language: {
            url: "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/[% c.installed_languages.${c.language} %].json"
        },
        [% END %]
        processing: true,
        serverSide: true,
        responsive: true,
        ajax: {
            url: '[% c.uri_for('/public/api/datatables/prints') %]',
        },
        columns: [
          { // more details control
              data: null,
              title: '&nbsp;', 
              orderable: false, 
              searchable: false,
              defaultContent: '&nbsp;'
          },
          { // Print Type
              data: '0',
              render: function(data,type,row) {
                  return data.replace("PrintManager", `[% c.loc("Print Manager") %]`);
              }
          },
          { // Status
              data: '1',
              render: function(data,type,row) {
                  return data.replace("In_progress", `[% c.loc("In progress") %]`);
              }
          },
          { data: '2' }, // Copies
          { data: '3' }, // Pages
          { // Client
              data: '4',
              render: function(data,type,row) {
                  return data.replace("__PRINT_FROM_WEB__", `<em>[% c.loc("Uploaded from Web") %]</em>`)
              }
          },
          { // Created
              data: '5',
              render: function(data,type,row) {
                  return data.replace("T", " ");
              }
          },
          { data: 'filename' }, // Filename
          { // Printer
              data: 'printer_costs',
              render: function(data,type,row) {
                  const print_job_id = row["print_job_id"];
                  const not_held = row["status"] !== "Held";
                  const sel_id = "printer-select-" + print_job_id;

                  const printer_costs = JSON.parse(row["printer_costs"]);

                  let html = `<select id="${sel_id}" ${not_held ? "disabled" : ""}>`;

                  for (let pc of printer_costs) {
                      const selected = pc.selected == 1 ? "selected" : "";
                      html += `<option value="${pc.id}" data-cost="${pc.cost}" ${selected}>${pc.name}</option>`;
                  }

                  html += `</select>`;
                  return html;
              }
          },
          { // Cost
              data: '7',
              render: function(data,type,row) {
                  return "<span id='" + row.print_job_id + "-cost'>" + formatter.format(data) + "</span>";
              } 
          },
          { // Actions
              data: null,
              title: 'Actions', 
              orderable: false, 
              searchable: false,
              render: function(data,type,row) {
                  const print_job_id = row["print_job_id"];
                  const not_held = row["status"] !== "Held";

                  let html = "<div class='btn-group' role='group' aria-label='Print actions'>";
                  [% IF public_print_release != "disabled" %]
                  if (not_held || user_funds < row["7"]) {
                    html += `<a id="print-btn-${print_job_id}" data-jobid="${print_job_id}" class="btn btn-primary print-release disabled" disabled aria-disabled="true" href="#" role="button"><i class="fa fa-print"></i> Print</a>`;
                  } else {
                    html += `<a id="print-btn-${print_job_id}" data-jobid="${print_job_id}" class="btn btn-primary print-release" href="#" role="button"><i class="fa fa-print"></i> Print</a>`;
                  }
                  [% END %]

                  if (not_held) {
                     html += `<a id="cancel-btn-${print_job_id}" class="btn btn-danger print-cancel disabled" disabled aria-disabled="true" href="#" role="button"><i class="fa fa-ban"></i> Cancel</a>`;
                  } else {
                     html += `<a id="cancel-btn-${print_job_id}" class="btn btn-danger print-cancel" data-jobid="${print_job_id}" href="#" role="button"><i class="fa fa-ban"></i> Cancel</a>`;
                  }
                  html += '</div>'
                  return html;
              }
          }
        ],
        initComplete: function () {
            setInterval(() => {
                $('#print-table').DataTable().draw(false);
            }, 30000);
        },
        order: [[5, "desc"]]
    });

    // Print handler
    $("#print-table").on("click", "a.print-release", async function(e) {
        e.preventDefault();
        const job_id = $(this).data("jobid");
        const printer = printerSelections[job_id] || $("#printer-select-" + job_id).val();

        const confirmed = confirm("[% c.loc('Job will be released to the printer immediately, are you sure you want to do this?') %]");
        if (confirmed) {
            const res = await fetch(`/public/api/user/release_print_job?id=${job_id}&printer=${printer}`);
            const data = await res.json();
            alert(data.success ? "[% c.loc('Print job released for printing!') %]" : data.error);
            $("#print-table").DataTable().draw(false);
        }
    });

    // Cancel handler
    $("#print-table").on("click", "a.print-cancel", async function(e) {
        e.preventDefault();
        const job_id = $(this).data("jobid");

        const confirmed = confirm("[% c.loc('Are you sure you want to cancel this print job?') %]");
        if (confirmed) {
            const res = await fetch(`/public/api/user/cancel_print_job?id=${job_id}`);
            const data = await res.json();
            alert(data.success ? "[% c.loc('Print job canceled!') %]" : data.error);
            $("#print-table").DataTable().draw(false);
        }
    });


    // Change cost on change of printer
    const printerSelections = {};
    $('#print-table').on('change', 'select[id^="printer-select-"]', function() {
        const print_job_id = this.id.replace("printer-select-", "");
        const cost = parseFloat(this.selectedOptions[0].dataset.cost);

        $('#'+print_job_id+'-cost').html(formatter.format(cost));
        printerSelections[print_job_id] = this.value;

        const btn = $("#print-btn-" + print_job_id);

        if (cost > user_funds) {
            btn.prop("disabled", true).addClass("disabled");
        } else {
            btn.prop("disabled", false).removeClass("disabled");
        }
    });

});
</script>
