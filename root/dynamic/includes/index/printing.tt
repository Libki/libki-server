[%- SET public_print_release = c.get_printer_configuration.public_print_release %]
<div class="container">
    <div class="row">
        <div class="col">
            <fieldset class="">
                <legend class="">[% c.loc("Upload file to print") %]</legend>
                [% IF c.req.params.error == "INVALID_FILETYPE" %]
                    <div class="alert alert-danger" role="alert">
                        [% c.loc('Filetype was invalid, file uploads must be PDF.') %]
                        [% c.loc('If your file is not a PDF, you may use a PDF printer such as <a target="_blank" class="alert-link" href="https://www.cutepdf.com/Products/CutePDF/writer.asp">CutePDF</a>,') %]
                        [% c.loc('or a <a target="_blank" class="alert-link" href="https://www.freepdfconvert.com/">web based PDF converter</a>.') %]
                    </div>
                [% ELSE %]
                    <div class="alert alert-info" role="alert">
                        [% c.loc('If your file is not a PDF, you may use a PDF printer such as <a target="_blank" class="alert-link" href="https://www.cutepdf.com/Products/CutePDF/writer.asp">CutePDF</a>,') %]
                        [% c.loc('or a <a target="_blank" class="alert-link" href="https://www.freepdfconvert.com/">web based PDF converter</a>.') %]
                    </div>
                [% END %]
                <form action="[% c.uri_for('upload_print_file') %]" method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroupFileAddon01">[% c.loc("Upload") %]</span>
                            </div>
                            <div class="custom-file">
                                <input type="file" accept="application/pdf" class="form-control custom-file-input" name="print_file" id="print_file"
                                    aria-describedby="inputGroupFileAddon01" required/>
                                <label class="custom-file-label" for="inputGroupFile01">[% c.loc("Choose file") %]</label>
                            </div>
                        </div>
                    </div>

                    <p/>

                    <div class="form-group">
                        <label for="printer_id">[% c.loc("Select a printer") %]</label>
                        [% FOREACH p IN c.get_printer_configuration.printers %]
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="printer_id" id="printer-[% p.key %]" value="[% p.key %]" required>
                                <label class="form-check-label" for="printer-[% p.key %]">[% p.value.public_printer_name | html %]</label>
                            </div>
                        [% END %]
                    </div>

                    <button type="submit" class="btn btn-primary"><i class="fa fa-file-upload"></i> [% c.loc("Upload") %]</button>
                </form>
            </fieldset>
        </div>
    </div>

    <p/>

    <div class="container">
        <h4>Funds available for printing: <span id="user-funds">0</span></h4>
        <span id="print-button-warning-text" class="form-text text-muted">
            [% c.loc('If enough funds are available, printing will start immediately when the "Print" button is clicked.') %]
        </span>
        <table id="print-table" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered">
            <thead>
            <th>[% c.loc("Type") %]</th>
            <th>[% c.loc("Status") %]</th>
            <th>[% c.loc("Copies") %]</th>
            <th>[% c.loc("Pages") %]</th>
            <th>[% c.loc("Client") %]</th>
            <th>[% c.loc("Created") %]</th>
            <th>[% c.loc("Printer") %]</th>
            <th>[% c.loc("Cost") %]</th>
            <th>&nbsp;</th>
            <th>&nbsp;</th>
            </thead>
        </table>
    </div>
</div>


<script>
    // Sets the filename in the bootstrapped file uploader once a file has been selected
    $(".custom-file-input").on("change", function() {
      var fileName = $(this).val().split("\\").pop();
      $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });

    const formatter = new Intl.NumberFormat('en-US', { //FIXME: locale and currency should be configurable system settings
      style: 'currency',
      currency: 'USD',
    });


    // Initalize the Print table as a datatable
    let user_funds = 0;
    pTable = $('#print-table').DataTable({
        [% IF !c.language.match('en') %]
        "oLanguage": {
            "sUrl": "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/[% c.installed_languages.${c.language} %].json"
        },
        [% END %]
        "bProcessing": true, // Indicate when the table is processing data
        "bServerSide": true, // Indicate that the datatable gets data from an HTTP GET request
        "sAjaxSource": "[% c.uri_for('/public/api/datatables/prints') %]", // The actual URL to call for data
        "fnInitComplete": function (oSettings, json) {
            setInterval(() => {
                $("#print-table").dataTable().fnDraw(true);
            }, 10000);
        },
        columnDefs: [
            {
                targets: [8],
                className: "[% IF public_print_release == 'disabled' %]display-none[% END %]"
            },
        ],
        "order": [
            [6, "desc"]
        ],
        "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            let print_job_id = aData["print_job_id"];
            let not_held = aData['status'] !='Held';

            // Update user funds
            // TODO: await this instead of async = false - https://petetasker.com/using-async-await-jquerys-ajax
            $.ajax({
                dataType: "json",
                url: "/public/api/user/funds",
                async: false,
                success: function(data) {
                    user_funds = data.funds;
                    $('#user-funds').html( formatter.format( user_funds ) );
                }
            });

            // Type column
            $('td:eq(0)', nRow).html(aData[0].replace('PrintManager', `[% c.loc("Print Manager") %]`));

            // Status column
            $('td:eq(1)', nRow).html(aData[1].replace('In_progress', `[% c.loc("In progress") %]`));

            // Client column
            $('td:eq(4)', nRow).html(aData[4].replace('__PRINT_FROM_WEB__', `<em>[% c.loc("Uploaded from Web") %]</em>`));

            // DateTime created
            $('td:eq(5)', nRow).html(aData[5].replace('T', ' '));

            // Generate the printer select pulldown, retain the current selected printer if there is one
            // otherwise default to the printer set for the print job itself
            let sel = document.createElement("select");
            let sel_id = "printer-select-" + print_job_id;
            sel.id = sel_id;
            let existing_sel = $("#" + sel_id);
            if ( aData['printer_costs'] ) {
                let printer_costs = JSON.parse(aData["printer_costs"]);
                for (i = 0; i < printer_costs.length; i++) {
                    let pc = printer_costs[i];
                    let opt = document.createElement("option");
                    opt.value = pc.id;
                    opt.text = pc.name;
                    opt.dataset.cost = pc.cost;
                    if ( existing_sel.length && aData["status"] == "Held" ) {
                        if ( pc.id == existing_sel.val() ) {
                            opt.setAttribute("selected", "selected");
                        }
                    }
                    else if ( pc.selected ) {
                        opt.setAttribute("selected", "selected");
                    }

                    sel.add(opt, null);
                }

                if ( not_held ) {
                    sel.setAttribute("disabled", "disabled");
                }

                // On change update the cost column and disable/enable print button
                sel.addEventListener(
                    'change',
                    function() {
                        let cost = this.options[this.selectedIndex].dataset.cost;
                        $('td:eq(7)', nRow).html( formatter.format(cost) );

                        let btn = $("#print-btn-" + print_job_id);
                        if ( cost > user_funds ) {
                            btn.prop("disabled",true);
                            btn.addClass("disabled");
                        } else {
                            btn.removeAttr('disabled');
                            btn.removeClass("disabled");
                        }
                    }
                );
                $('td:eq(6)', nRow).append( sel );

            }

            // Cost
            let cost = sel.options[sel.selectedIndex].dataset.cost;
            $('td:eq(7)', nRow).html( formatter.format(cost) );

            // Print & Cancel buttons
            let insufficient_funds = cost > user_funds;
            let html;
            [% IF public_print_release != "disabled" %]
                if ( not_held || insufficient_funds ) {
                    html = `<a id="print-btn-${ print_job_id }" data-jobid="${ print_job_id }" class="btn btn-primary print-release disabled" disabled="disabled" aria-disabled="true" href="#" role="button"><i class="fa fa-print" /> Print</a>`;
                } else {
                    html = `<a id="print-btn-${ print_job_id }" data-jobid="${ print_job_id }" class="btn btn-primary print-release" href="#" role="button"><i class="fa fa-print" /> Print</a>`;
                }
            [% ELSE %]
                html = "&nbsp;";
            [% END %]
            $('td:eq(8)', nRow).html(html);

            if ( not_held ) {
                html = `<a id="cancel-btn-${ print_job_id }" class="btn btn-primary print-cancel disabled" disabled="disbled" aria-disabled="true" href="#" role="button"><i class="fa fa-cancel" /> Cancel</a>`;
            } else {
                html = `<a id="cancel-btn-${ print_job_id }" class="btn btn-primary print-cancel" disabled data-jobid="${ aData['print_job_id']}" href="#" role="button"><i class="fa fa-cancel" /> Cancel</a>`;
            }
            $('td:eq(9)', nRow).html(html);
        }
    });

    $( "#print-table" ).on( "click", "a.print-release", function(e) {
        e.preventDefault();
        const job_id = $(this).data('jobid');
        const printer = $("#printer-select-" + job_id).val();

        const confirmed = confirm("[% c.loc('Job will be released to the printer immediately, are you sure you want to do this?') %]");
        if ( confirmed ) {
            $.getJSON( "/public/api/user/release_print_job", { id: job_id, printer: printer }, function( data ) {
                if ( data.success ) {
                    alert('[% c.loc("Print job released for printing!") %]');
                } else {
                    alert( data.error );
                }

                $("#print-table").dataTable().fnDraw(true);
            });
        };
    });

    $( "#print-table" ).on( "click", "a.print-cancel", function(e) {
        e.preventDefault();
        const job_id = $(this).data('jobid');

        const confirmed = confirm("[% c.loc('Are you sure you want to cancel this print job?') %]");
        if ( confirmed ) {
            $.getJSON( "/public/api/user/cancel_print_job", { id: job_id }, function( data ) {
                if ( data.success ) {
                    alert('[% c.loc("Print job canceled!") %]');
                } else {
                    alert( data.error );
                }

                $("#print-table").dataTable().fnDraw(true);
            });
        };
    });
</script>
